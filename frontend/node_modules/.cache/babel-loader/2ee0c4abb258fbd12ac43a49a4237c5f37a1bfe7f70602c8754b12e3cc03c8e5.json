{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSVALDO\\\\DEV\\\\meu-projeto-json\\\\frontend\\\\src\\\\components\\\\Form.jsx\",\n  _s = $RefreshSig$();\n// src/components/Form.js\nimport '../components/Form.css';\nimport React, { useState, useEffect } from 'react';\nimport { createItem, updateItem } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  selectedItem,\n  onSaved\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n\n  // Preenche o formulário ao selecionar um item para editar\n  useEffect(() => {\n    if (selectedItem) {\n      setFormData({\n        name: selectedItem.name,\n        email: selectedItem.email,\n        phone: selectedItem.phone\n      });\n    }\n  }, [selectedItem]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (selectedItem) {\n        await updateItem(selectedItem.id, formData);\n      } else {\n        await createItem(formData);\n      }\n      setFormData({\n        name: '',\n        email: '',\n        phone: ''\n      });\n      onSaved(); // Atualiza lista\n    } catch (error) {\n      console.error('Erro ao salvar item:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedItem ? 'Editar Item' : 'Cadastrar Item'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Nome\",\n      value: formData.name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"E-mail\",\n      value: formData.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"phone\",\n      placeholder: \"Telefone\",\n      value: formData.phone,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: selectedItem ? 'Atualizar' : 'Cadastrar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"uznVDh9v/UvhVoYjfKUJ4uYVwQ8=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","createItem","updateItem","jsxDEV","_jsxDEV","Form","selectedItem","onSaved","_s","formData","setFormData","name","email","phone","handleChange","e","value","target","prev","handleSubmit","preventDefault","id","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["D:/OSVALDO/DEV/meu-projeto-json/frontend/src/components/Form.jsx"],"sourcesContent":["// src/components/Form.js\r\nimport '../components/Form.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { createItem, updateItem } from '../api';\r\n\r\nconst Form = ({ selectedItem, onSaved }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n  });\r\n\r\n  // Preenche o formulário ao selecionar um item para editar\r\n  useEffect(() => {\r\n    if (selectedItem) {\r\n      setFormData({\r\n        name: selectedItem.name,\r\n        email: selectedItem.email,\r\n        phone: selectedItem.phone,\r\n      });\r\n    }\r\n  }, [selectedItem]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (selectedItem) {\r\n        await updateItem(selectedItem.id, formData);\r\n      } else {\r\n        await createItem(formData);\r\n      }\r\n      setFormData({ name: '', email: '', phone: '' });\r\n      onSaved(); // Atualiza lista\r\n    } catch (error) {\r\n      console.error('Erro ao salvar item:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>{selectedItem ? 'Editar Item' : 'Cadastrar Item'}</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Nome\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"E-mail\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"phone\"\r\n        placeholder=\"Telefone\"\r\n        value={formData.phone}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\">{selectedItem ? 'Atualizar' : 'Cadastrar'}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}